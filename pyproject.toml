# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "oyLabImaging/__init__.py"

# https://peps.python.org/pep-0621/
[project]
name = "oyLabImaging"
dynamic = ["version"]
description = "Data processing code for the Oyler-Yaniv lab @HMS."
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [{ name = "Alon Oyler-Yaniv" }]
dependencies = [
    "cellpose",
    "cloudpickle",
    "dill",
    "ipython",
    "multiprocess",
    "natsort",
    "nd2",
    "numpy",
    "pandas",
    "pyfftw",       # look into using numpy.fft instead
    "scikit-image",
    "scipy",
    "tqdm",
    # "lap",        # look into laptracker
    "opencv-python",
    "ipywidgets",
    "Pillow>=8.3.1",
    "poppy>=1.0.1",
    "pyfftw>=0.12.0",
    "scikit-learn",
    "zernike",
    "jupyter>=1.0.0",
    # "tensorflow-cpu==2.10.0",
    "csbdeep",
    "stardist",
]


[tool.hatch.metadata]
allow-direct-references = true # allow @URL in installation requirements

# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
cuda = [
    "cupy-cuda11x ; platform_system != 'Darwin'",
    # Linux
    "torch@https://download.pytorch.org/whl/cu111/torch-1.8.1%2Bcu111-cp38-cp38-linux_x86_64.whl ; platform_system == 'Linux'",
    "torchaudio@https://download.pytorch.org/whl/torchaudio-0.8.1-cp38-cp38-linux_x86_64.whl ; platform_system == 'Linux'",
    "torchvision@https://download.pytorch.org/whl/cu111/torchvision-0.9.1%2Bcu111-cp38-cp38-linux_x86_64.whl ; platform_system == 'Linux'",
    # Windows
    "torch@https://download.pytorch.org/whl/cu111/torch-1.8.1%2Bcu111-cp38-cp38-win_amd64.whl ; platform_system == 'Windows'",
    "torchaudio@https://download.pytorch.org/whl/torchaudio-0.8.1-cp38-cp38-win_amd64.whl ; platform_system == 'Windows'",
    "torchvision@https://download.pytorch.org/whl/cu111/torchvision-0.9.1%2Bcu111-cp38-cp38-win_amd64.whl ; platform_system == 'Windows'",
]
viewer = ["napari[pyqt5]", "magicgui", "matplotlib"]
numba = ["numba"]
test = ["pytest", "pytest-cov"]


[project.urls]
homepage = "https://github.com/oylab/oyLabImaging"
repository = "https://github.com/oylab/oyLabImaging"

# [tool.pytest.ini_options]
# filterwarnings = ["error:::oyLabImaging"]

# use with `conda-lock -f pyproject.toml --with-cuda=11`

[tool.conda-lock]
channels = ['conda-forge', 'defaults']
platforms = [
    "linux-64",
    "osx-64",
    "osx-arm64",
    "win-64",
    # "linux-aarch64",
]

[tool.conda-lock.dependencies]
zernike = { source = "pypi" }
